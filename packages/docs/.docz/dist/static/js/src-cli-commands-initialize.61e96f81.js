(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/cli/commands/initialize.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;c(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"p",components:n},"Initialize a local pando factory."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-text",metastring:""}},"$ ls\nbar.ts  baz.ts  foo.ts  .gitignore\n$ pando status\nbranch: master\n\ntracked files with modifications:\n  \u279c these will be automatically considered for commit\n  \u279c use gl untrack <f> if you don't want to track changes to file f\n  \u279c if file f was committed before, use gl checkout <f> to discard local changes\n\n    foo.py\n    bar.py\n\nUntracked files:\n  \u279c these won't be considered for commit)\n  \u279c use gl track <f> if you want to track changes to file f\n")))}}}]);