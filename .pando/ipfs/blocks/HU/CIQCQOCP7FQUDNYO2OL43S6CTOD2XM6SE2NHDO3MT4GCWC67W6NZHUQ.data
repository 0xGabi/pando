
ˆ€"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// const fs = require('fs')
var fs = require("fs");
var touchlib = require("touch");
// const path = require('path')
var jsonfile = require('jsonfile');
// const touch = require('touch')
// const rmdir = require('rmdir')
// cwd: () => {
//   return path.basename(process.cwd())
// },
// 
// clean: () => {
//   return new Promise((resolve, reject) => {
//     rmdir('.', function (err, dirs, files) {
//       if (err) {
//         reject(err)
//       } else {
//         resolve({ dirs, files })
//       }
//     })
//   })
// },
// 
exports.touch = function (path) {
    return touchlib.sync(path);
};
exports.mkdir = function (path) {
    return fs.mkdirSync(path);
};
exports.exists = function (path) {
    return fs.existsSync(path);
};
var json;
(function (json) {
    function write(path, object) {
        return jsonfile.writeFileSync(path, object);
    }
    json.write = write;
    function read(path) {
        return jsonfile.readFileSync(path);
    }
    json.read = read;
})(json = exports.json || (exports.json = {}));
// 
// read: (path) => {
//   try {
//     return jsonfile.readFileSync(path)
//   } catch (err) {
//     return undefined
//   }
// },
// 
// write: (path, object) => {
//   jsonfile.writeFileSync(path, object)
// },
// 
// cat: (path, file) => {
//   return new Promise((resolve, reject) => {
//     fs.writeFile(path, file.content, (err) => {
//       if (err) {
//         reject(err)
//       } else {
//         resolve()
//       }
//     })
//   })
// },
// 
// delete: (path) => {
//   fs.unlinkSync(path)
// }
//# sourceMappingURL=fs.js.map€